{"ast":null,"code":"var _jsxFileName = \"/Users/marilisebarbosa/.bitnami/stackman/machines/xampp/volumes/root/htdocs/wallet-digital/src/pages/dashboard/index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { addWalletAmount } from '../../actions';\nimport { setWallet } from '../../actions';\nimport { RecentTransactionRow } from './recentTransactionRow';\n\nconst DashboardScreen = ({\n  history,\n  wallet,\n  setWallet,\n  addWalletAmount\n}) => {\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    fetch(\"http://192.168.64.2/wallet-digital/_responses/wallet.php\").then(response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw new Error('Something went wrong');\n      }\n    }).then(result => {\n      console.log(result);\n      setWallet(result.wallet);\n      setUser(result.user);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n\n  const handleAddAmount = () => {\n    addWalletAmount(100);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"section-dashboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 18\n    }\n  }, \" \", user !== null && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row bottom-divider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 38\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 28\n    }\n  }, \" User Dashboard \"))), \" \", /*#__PURE__*/React.createElement(\"div\", {\n    className: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"user_name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, \" \", user.name, \" \"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"user_email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 79\n    }\n  }, \" \", user.email, \" \"), \" \"), \" \"), \" \", wallet !== null && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 44\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"column p-0 pr\",\n    style: {\n      width: '30%',\n      justifyContent: 'flex-start'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mt\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 29\n    }\n  }, \" Valor Dispon\\xEDvel \"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"money-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 91\n    }\n  }, \" \", wallet.amount.toLocaleString('pt-BR', {\n    style: 'currency',\n    currency: 'BRL'\n  }), \" \"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"money-type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 157\n    }\n  }, \" BRL \"), \" \"), \" \"), \" \", /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn-action\",\n    style: {\n      width: '49%'\n    },\n    onClick: handleAddAmount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 29\n    }\n  }, \" Adicionar Saldo \"), \" \", /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn-action\",\n    style: {\n      width: '49%',\n      background: '#1d94af'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 84\n    }\n  }, \" Transfer\\xEAncias \"), \" \"), \" \"), \" \", /*#__PURE__*/React.createElement(\"div\", {\n    className: \"column p-0 pl\",\n    style: {\n      width: '70%',\n      justifyContent: 'flex-start'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mt\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 29\n    }\n  }, \" Transa\\xE7\\xF5es Recentes \"), \" \", /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 94\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"recent-transactions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      width: '7%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 29\n    }\n  }, \" \"), \" \", /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 60\n    }\n  }, \" Data \"), \" \", /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 46\n    }\n  }, \" A\\xE7\\xE3o \"), \" \", /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 46\n    }\n  }, \" Valor \"), \" \"), \" \"), \" \", /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 37\n    }\n  }, \" \", wallet.transactions.map(transaction => /*#__PURE__*/React.createElement(RecentTransactionRow, {\n    data: transaction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 72\n    }\n  })), \" \"), \" \"), \" \"), \" \"), \" \"), \" \"), \" \"), \" \");\n};\n\nconst mapStateToProps = store => ({\n  user: store.userStore.user,\n  wallet: store.walletStore.wallet\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  setWallet,\n  addWalletAmount\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DashboardScreen);","map":{"version":3,"sources":["/Users/marilisebarbosa/.bitnami/stackman/machines/xampp/volumes/root/htdocs/wallet-digital/src/pages/dashboard/index.js"],"names":["React","useState","useEffect","Link","withRouter","connect","bindActionCreators","addWalletAmount","setWallet","RecentTransactionRow","DashboardScreen","history","wallet","user","setUser","fetch","then","response","ok","json","Error","result","console","log","catch","error","handleAddAmount","name","email","width","justifyContent","amount","toLocaleString","style","currency","background","transactions","map","transaction","mapStateToProps","store","userStore","walletStore","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { addWalletAmount } from '../../actions';\nimport { setWallet } from '../../actions';\nimport { RecentTransactionRow } from './recentTransactionRow';\n\nconst DashboardScreen = ({ history, wallet, setWallet, addWalletAmount }) => {\n        const [user, setUser] = useState(null)\n\n        useEffect(() => {\n            fetch(\"http://192.168.64.2/wallet-digital/_responses/wallet.php\")\n                .then(response => {\n                    if (response.ok) {\n                        return response.json();\n                    } else {\n                        throw new Error('Something went wrong');\n                    }\n                })\n                .then(result => {\n                    console.log(result)\n                    setWallet(result.wallet)\n                    setUser(result.user)\n                })\n                .catch(error => {\n                    console.log(error)\n                })\n        }, [])\n\n        const handleAddAmount = () => {\n            addWalletAmount(100);\n        }\n\n        return ( <\n                div className = { \"section-dashboard\" } > {\n                    user !== null && < div className = { \"row bottom-divider\" } >\n                    <\n                    div className = { \"column\" } >\n                    <\n                    span > < h1 > User Dashboard < /h1></span >\n                    <\n                    /div> <\n                    div className = { \"column\" } >\n                    <\n                    span className = { \"user_name\" } > { user.name } < /span> <\n                    span className = { \"user_email\" } > { user.email } < /span> <\n                    /div> <\n                    /div>} {\n                        wallet !== null && < div className = { \"row\" } >\n                            <\n                            div className = { \"column p-0 pr\" }\n                        style = {\n                                { width: '30%', justifyContent: 'flex-start' } } >\n                            <\n                            div className = { \"row mt\" } >\n                            <\n                            div className = { \"card\" } >\n                            <\n                            span className = { \"card-title\" } > Valor Disponível < /span> <\n                            span className = { \"money-value\" } > { wallet.amount.toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' }) } < /span> <\n                            span className = { \"money-type\" } > BRL < /span> <\n                            /div> <\n                            /div> <\n                            div className = { \"row\" } >\n                            <\n                            button type = { \"button\" }\n                        className = { \"btn-action\" }\n                        style = {\n                            { width: '49%' } }\n                        onClick = { handleAddAmount } > Adicionar Saldo < /button> <\n                            button type = { \"button\" }\n                        className = { \"btn-action\" }\n                        style = {\n                                { width: '49%', background: '#1d94af' } } > Transferências < /button> <\n                            /div> <\n                            /div> <\n                            div className = { \"column p-0 pl\" }\n                        style = {\n                                { width: '70%', justifyContent: 'flex-start' } } >\n                            <\n                            div className = { \"row mt\" } >\n                            <\n                            div className = { \"card\" } >\n                            <\n                            span className = { \"card-title\" } > Transações Recentes < /span> <\n                            div className = { \"row\" } >\n                            <\n                            table className = { \"recent-transactions\" } >\n                            <\n                            thead >\n                            <\n                            tr >\n                            <\n                            th style = {\n                                { width: '7%' } } > < /th> <\n                            th > Data < /th> <\n                            th > Ação < /th> <\n                            th > Valor < /th> <\n                            /tr> <\n                            /thead> <\n                            tbody > {\n                                wallet.transactions.map(transaction => < RecentTransactionRow data = { transaction }\n                                    />)} <\n                                    /tbody> <\n                                    /table> <\n                                    /div> <\n                                    /div> <\n                                    /div> <\n                                    /div> <\n                                    /div>} <\n                                    /div>\n                                );\n                            }\n\n                        const mapStateToProps = store => ({\n                            user: store.userStore.user,\n                            wallet: store.walletStore.wallet,\n                        });\n\n                        const mapDispatchToProps = dispatch => bindActionCreators({ setWallet, addWalletAmount }, dispatch);\n\n                        export default connect(mapStateToProps, mapDispatchToProps)(DashboardScreen);"]},"metadata":{},"sourceType":"module"}